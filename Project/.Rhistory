tp /
sp /
rp
}
test(season_input)
season_input = c("o", "t","r")
test(season_input)
season_input = c("o", "t", "s", "r")
test(season_input)
t1 = c("a", "b", "c")
t2 = c("a", "b", "c", "d")
t2-t1
test <- function(x) {
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
} else if (x[i] == "t") {
tp <- trend_plt
} else if (x[i] == "s") {
sp <- seasonal_plt
} else if (x[i] == "r") {
rp <- residual_plt
}
}
if
op/tp/sp/rp
}
test <- function(x) {
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
} else if (x[i] == "t") {
tp <- trend_plt
} else if (x[i] == "s") {
sp <- seasonal_plt
} else if (x[i] == "r") {
rp <- residual_plt
}
}
op/tp/sp/rp
}
test(season_input)
paste(season_input, sep = /)
paste(season_input, sep = "/")
(is.na(season_input[5]))
(!is.na(season_input[5]))
t1, t2 = 5
m=.005
if(m <= 0.01) "<= 0.01" else round(pval, 3)
if(m <= 0.01) "<= 0.01" else
if(m <= 0.05) " <= 0.05" else round(pval, 3)
m=.03
if(m <= 0.01) "<= 0.01" else
if(m <= 0.05) " <= 0.05" else round(pval, 3)
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt = 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt = 1) rp else
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt = 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt = 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt = 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt = 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt = 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt == 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test(season_input)
season_input = c("o", "t", "r")
test(season_input)
apply_left.gg <- function(pipe_left_arg,
pipe_right_arg,
pipe_environment,
left_arg_name,
pipe_string,
right_arg_name) {
pipe_right_arg <- eval(pipe_right_arg,
envir = pipe_environment,
enclos = pipe_environment)
pipe_left_arg + pipe_right_arg
}
apply_right.gg <- function(pipe_left_arg,
pipe_right_arg,
pipe_environment,
left_arg_name,
pipe_string,
right_arg_name) {
pipe_left_arg + pipe_right_arg
}
apply_right.labels <- function(pipe_left_arg,
pipe_right_arg,
pipe_environment,
left_arg_name,
pipe_string,
right_arg_name) {
if(!("gg" %in% class(pipe_left_arg))) {
stop("apply_right.labels expected left argument to be class-gg")
}
pipe_left_arg + pipe_right_arg
}
# Assign common ggplot elements to be subbed later on
theme_standard <- theme_minimal() +
theme(plot.title = element_text(hjust=0.5, size=20, face="bold"))
theme_4panel <- theme_minimal() +
theme(axis.text.x = element_blank(), axis.title.x = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(hjust=0.5, vjust=-.5, size=10),
plot.margin = unit(c(0,0,0,0), "cm"),
panel.border = element_rect(color="black", fill=NA, size=.5))
labels_standard <- labs(x = "", y = "Sales ($)", title = "Total Daily Sales (2013-15)")
vline_outliers <- geom_vline(xintercept = 10000, color="red", linetype="dashed")
date_breaks_4panel <- scale_x_date(breaks = as.Date(c("2013-01-01", "2013-05-01", "2013-09-01",
"2014-01-01", "2014-05-01", "2014-09-01",
"2015-01-01", "2015-05-01", "2015-09-01")))
# Import data
df <- read.csv("Data/sales_train.csv")
## Create "sales" series with a daily frequency datetime index
# Format datetime column
df$date <- as.Date(df$date, "%d.%m.%Y")
# Create time series
ts <- df %>%
group_by(date) %>%
summarise(sales = sum(item_cnt_day))
original_plt /
trend_plt /
seasonal_plt /
residual_plt
ts$sales %.>%
{ units <- ts(., frequency = 7) } %.>%   #weekly seasonality
{ decomp <- stl(., s.window='periodic') }
original_plt <- ggplot(ts, aes(x=date, y=sales)) +
geom_line(color="#006699") +
theme_4panel +
labs(title="Original series") +
date_breaks_4panel
trend_plt <- decomp %.>%
{ .$time.series[,2] } %.>%
{ trend <- cbind(data.frame(.), ts$date) } %.>%
{ colnames(trend) <- c("trend", "date") } %.>%
ggplot(trend, aes(x=date, y=trend)) %.>%
geom_line(color="#006699") %.>%
theme_4panel %.>%
labs(title="Trend") %.>%
date_breaks_4panel
seasonal_plt <- decomp %.>%
{ .$time.series[,1] } %.>%
{ seasonal <- cbind(data.frame(.), ts$date) } %.>%
{ colnames(seasonal) <- c("seasonal", "date") } %.>%
ggplot(seasonal, aes(x=date, y=seasonal)) %.>%
geom_line(color="#006699") %.>%
theme_4panel %.>%
labs(title="Seasonal") %.>%
date_breaks_4panel
residual_plt <- decomp %.>%
{ .$time.series[,3] } %.>%
{ residual <- cbind(data.frame(.), ts$date) } %.>%
{ colnames(residual) <- c("residual", "date") } %.>%
ggplot(residual, aes(x=date, y=residual)) %.>%
geom_line(color="#006699") %.>%
theme_minimal() %.>%
labs(title="Residual") %.>%
theme(axis.title.y = element_blank(),
plot.title = element_text(hjust=0.5, vjust=-.5, size=10),
plot.margin = unit(c(0,0,0,0), "cm"),
panel.border = element_rect(color="black", fill=NA, size=.5)) %.>%
scale_x_date(breaks = as.Date(c("2013-01-01", "2013-05-01", "2013-09-01",
"2014-01-01", "2014-05-01", "2014-09-01",
"2015-01-01", "2015-05-01", "2015-09-01")),
date_labels = "%Y-%m")   #unfortunately can't get date_breaks = "4 months" to pull correct labels
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt == 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test <- function(x) {
op_cnt = 0
tp_cnt = 0
sp_cnt = 0
rp_cnt = 0
for (i in 1:length(x)) {
if (is.na(x[i])) {
print("select one or more plot elements")
} else if (x[i] == "o") {
op <- original_plt
op_cnt <- op_cnt + 1
} else if (x[i] == "t") {
tp <- trend_plt
tp_cnt <- tp_cnt + 1
} else if (x[i] == "s") {
sp <- seasonal_plt
sp_cnt <- sp_cnt + 1
} else if (x[i] == "r") {
rp <- residual_plt
rp_cnt <- rp_cnt + 1
}
}
if(length(x) == 4) op/tp/sp/rp else
if(length(x) == 3 & op_cnt == 0) tp/sp/rp else
if(length(x) == 3 & sp_cnt == 0) op/tp/rp else
if(length(x) == 3 & tp_cnt == 0) op/sp/rp else
if(lenth(x) == 3 & rp_cnt == 0) op/sp/tp else
if(length(x) == 2 & op_cnt == 1 & tp_cnt == 1) op/tp else
if(length(x) == 2 & op_cnt == 1 & sp_cnt == 1) op/sp else
if(length(x) == 2 & op_cnt == 1 & rp_cnt == 1) op/rp else
if(length(x) == 2 & tp_cnt == 1 & sp_cnt == 1) tp/sp else
if(length(x) == 2 & tp_cnt == 1 & rp_cnt == 1) tp/rp else
if(length(x) == 2 & sp_cnt == 1 & rp_cnt == 1) sp/rp else
if(length(x) == 1 & op_cnt == 1) op else
if(length(x) == 1 & tp_cnt == 1) tp else
if(length(x) == 1 & sp_cnt == 1) sp else
if(length(x) == 1 & rp_cnt == 1) rp else
print('Select one or more plot elements')
}
test(season_input)
runApp()
